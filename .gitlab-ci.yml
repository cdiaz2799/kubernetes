---
# include:
#   - template: Security/SAST-IaC.gitlab-ci.yml # IaC Scanning
#   - template: Jobs/Secret-Detection.gitlab-ci.yml # Secret Detection

variables:
  KUBE_CTX: homelab-infrastructure/kubernetes:homelab
  KUBE_CONFIG_PATH: ${KUBECONFIG}
  TF_IMPLICIT_INIT: "true"
  TF_STATE_NAME: prod
  TF_IN_AUTOMATION: "true"

stages: [test, validate, build, deploy]

default:
  image: registry.gitlab.com/containers1211942/opentofu
  before_script:
    - gitlab-tofu init --upgrade
    - kubectl config get-contexts
    - kubectl config use-context ${KUBE_CTX}

fmt:
  stage: validate
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH
  allow_failure: true
  cache:
    key: ${CI_PROJECT_DIR}
    paths:
      - ./.terraform
  script:
    - gitlab-tofu fmt

validate:
  stage: validate
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH
  cache:
    key: ${CI_PROJECT_DIR}
    paths:
      - ./.terraform
  script:
    - gitlab-tofu validate

plan:
  stage: build
  environment:
    name: ${TF_STATE_NAME}
    action: prepare
  resource_group: ${TF_STATE_NAME}
  artifacts:
    paths:
      - ./plan.cache
    reports:
      terraform: ./plan.json
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH
  cache:
    key: ${CI_PROJECT_DIR}
    paths:
      - ./.terraform
  script:
    - gitlab-tofu plan
    - gitlab-tofu plan-json

apply:
  stage: deploy
  environment:
    name: ${TF_STATE_NAME}
    action: start
  resource_group: ${TF_STATE_NAME}
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && "$[[ inputs.auto_apply ]]" == "true"'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  cache:
    key: ${CI_PROJECT_DIR}
    paths:
      - ./.terraform
  script:
    - gitlab-tofu apply
