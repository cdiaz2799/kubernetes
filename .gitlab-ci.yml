# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
variables:
  KUBE_CTX: homelab-infrastructure/kubernetes:homelab
  KUBE_CONFIG_PATH: "${KUBECONFIG}"
  TF_IMPLICIT_INIT: 'true'
  TF_STATE_NAME: prod
  TF_IN_AUTOMATION: 'true'
stages:
- test
- validate
- build
- deploy
default:
  image: registry.gitlab.com/containers1211942/opentofu
  before_script:
  - gitlab-tofu init --upgrade
  - kubectl config get-contexts
  - kubectl config use-context ${KUBE_CTX}
fmt:
  stage: validate
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - if: "$CI_OPEN_MERGE_REQUESTS"
    when: never
  - if: "$CI_COMMIT_BRANCH"
  allow_failure: true
  cache:
    key: "${CI_PROJECT_DIR}"
    paths:
    - "./.terraform"
  script:
  - gitlab-tofu fmt
validate:
  stage: validate
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - if: "$CI_OPEN_MERGE_REQUESTS"
    when: never
  - if: "$CI_COMMIT_BRANCH"
  cache:
    key: "${CI_PROJECT_DIR}"
    paths:
    - "./.terraform"
  script:
  - gitlab-tofu validate
plan:
  stage: build
  environment:
    name: "${TF_STATE_NAME}"
    action: prepare
  resource_group: "${TF_STATE_NAME}"
  artifacts:
    paths:
    - "./plan.cache"
    reports:
      terraform: "./plan.json"
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - if: "$CI_OPEN_MERGE_REQUESTS"
    when: never
  - if: "$CI_COMMIT_BRANCH"
  cache:
    key: "${CI_PROJECT_DIR}"
    paths:
    - "./.terraform"
  script:
  - gitlab-tofu plan
  - gitlab-tofu plan-json
apply:
  stage: deploy
  environment:
    name: "${TF_STATE_NAME}"
    action: start
  resource_group: "${TF_STATE_NAME}"
  rules:
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && "$[[ inputs.auto_apply ]]" == "true"
  - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    when: manual
  cache:
    key: "${CI_PROJECT_DIR}"
    paths:
    - "./.terraform"
  script:
  - gitlab-tofu apply
include:
- template: Security/Secret-Detection.gitlab-ci.yml
